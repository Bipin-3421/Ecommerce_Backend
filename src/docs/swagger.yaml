openapi: 3.0.0
info:
  title: Ecommerce API
  description: API for managing users and products
  version: 1.0.0
servers:
  - url: http://localhost:3001

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    product:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        category:
          type: string
        image:
          type: string
          format: binary
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    UserRole:
      type: object
      properties:
        role:
          type: string

paths:
  /api/products/:
    get:
      summary: Get all products
      security:
        - JWT: []
      tags:
        - Products
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/product"
        "404":
          description: Products not found

    post:
      summary: Create a new product
      security:
        - JWT: []
      tags:
        - Products
      requestBody:
        description: The product to create
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/product"
      responses:
        "201":
          description: The product is created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        "500":
          description: Internal server error

  /api/products/filter/price:
    get:
      summary: filter a product by price range
      tags:
        - Products
      responses:
        "200":
          description: The product to filter
        "404":
          description: Product not found

  /api/products/filter/{productCategory}:
    get:
      summary: filtering product by category
      parameters:
        - name: productCategory
          in: path
          description: Product to categorize
          required: true
      tags:
        - Products
      responses:
        "200":
          description: list of categorized products
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/product"
        "404":
          description: Product not found

  /api/products/{productId}:
    patch:
      summary: Update a product
      security:
        - JWT: []
      parameters:
        - name: productId
          in: path
          description: Product to edit
          required: true
          schema:
            type: string
      tags:
        - Products
      requestBody:
        description: The product to update
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/product"
      responses:
        "200":
          description: The updated product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
        "404":
          description: Product not found

    delete:
      summary: Delete a product
      security:
        - JWT: []
      tags:
        - Products
      parameters:
        - name: productId
          in: path
          description: Product to delete
          required: true
          schema:
            type: string

      responses:
        "200":
          description: product deleted successfully
        "404":
          description: product not found

  /api/users:
    get:
      summary: Get all users
      security:
        - JWT: []
      tags:
        - Users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/User"
        "404":
          description: No users found

    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: The user is created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "500":
          description: Error creating user

  /api/users/login:
    post:
      summary: login an user
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: The user is logged in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLogin"
        "404":
          description: user not found

  /api/users/{userId}:
    get:
      summary: Get a user by ID
      security:
        - JWT: []
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    patch:
      summary: Update a user
      security:
        - JWT: []
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRole"
      responses:
        "200":
          description: The updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserRole"
        "404":
          description: User not found
    delete:
      summary: Delete a user
      security:
        - JWT: []
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found
